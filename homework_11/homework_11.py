# ДЗ 11. Работа с множествами
# Задача 2
# Дано три множества
set1 = {1, 2, 3, 4}
set2 = {2, 3, 5, 6}
set3 = {3, 4, 6, 7}
# Одним действием (одной строкой) виполнить intersection єтих множеств
print(set1.intersection(set2, set3))
print(set1 & set2 & set3)


# Задача 3
# Дано три множества
set1 = {1, 2, 3, 4}
set2 = {2, 3, 5, 6}
set3 = {3, 4, 6, 7}
# Одним действием (одной строкой) виполнить difference єтих множеств
print(set1 - set2 - set3)


# Задача 4
# Дано три множества
set1 = {1, 2, 3, 4}
set2 = {2, 3, 5, 6}
set3 = {3, 4, 6, 7}
# Одним действием (одной строкой) виполнить union єтих множеств
print(set1.union(set2, set3))
print(set1 | set2 | set3)


# Задача 5
# Добавить список элементов к заданному набору
sampleSet = {"Yellow", "Orange", "Black"}
sampleList = ["Blue", "Green", "Red"]
sampleSet.update(sampleList)
print(sampleSet)


# Задача 6
# Вернуть новый набор идентичных предметов из заданных двух наборов
set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
res = set1.intersection(set2)
print(res)
res = set1 & set2
print(res)


# Задача 7
# Возвращает новый набор со всеми элементами из обоих наборов, удаляя дубликаты.
set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
res = set1.union(set2)
print(res)


# Задача 8
# Учитывая два набора Python, обновите первый набор элементами,
# которые существуют только в первом наборе, но не во втором наборе.
set1 = {10, 20, 30}
set2 = {20, 40, 50}
set1.difference_update(set2)
print(set1)


# Задача 9
# Удалите єлементи 10, 20, 30 из следующего набора
set1 = {10, 20, 30, 40, 50}
set2 = {10, 20, 30}
set1.difference_update(set2)
print(set1)


# Задача 11
# Проверьте, есть ли в двух наборах какие-либо общие элементы. Если да, отобразите общие элементы.
set1 = {10, 20, 30, 40, 50}
set2 = {60, 70, 80, 90, 10}
if set1.isdisjoint(set2) == False:
    print(f'Общий элемент {set1.intersection(set2)}')
else:
    print('Общих элементов нет')


# Задача 12
# Обновите набор 1, добавив элементы из набора 2
set1 = {10, 20, 30, 40, 50}
set2 = {60, 70, 80, 90, 10}
set1.update(set2)
print(set1)


# Задача 13
# Удалите элементы из set1, которые не являются общими для set1 и set2
set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
set1.intersection_update(set2)
print(set1)


# Задача 14
# Используя Все полученние знания по всем типам данних виполнить рефакторинг кода задачи с сложним списком из лекции 6.
# Код уменьшить до минимального количества строк
